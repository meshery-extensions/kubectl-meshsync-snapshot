# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com

project_name: kubectl-meshsync-snapshot
version: 2

before:
  hooks:
    # you may remove this if you don't use vgo
    - go mod tidy
    # you may remove this if you don't need go generate
    # - go generate ./...
builds:
- main: ./cmd/meshsync/main.go

  env:
    - CGO_ENABLED=0

  ldflags:
    - -s -w -X github.com/meshery-extensions/kubectl-meshsync-snapshot/constants.version={{.Tag}}
    - -s -w -X github.com/meshery-extensions/kubectl-meshsync-snapshot/constants.commitsha={{.ShortCommit}}
    - -s -w -X github.com/meshery-extensions/kubectl-meshsync-snapshot/constants.releasechannel={{.Env.RELEASE_CHANNEL}}
  # GOOS list to build for.
  # For more info refer to: https://golang.org/doc/install/source#environment
  # Defaults are darwin and linux.
  goos:
    - darwin
    - linux
    - windows

  # # GOARCH to build for.
  # # For more info refer to: https://golang.org/doc/install/source#environment
  # # Defaults are 386 and amd64.
  goarch:
    - 386
    - amd64
    - arm
    - arm64

  # List of combinations of GOOS + GOARCH + GOARM to ignore.
  ignore:
      - goos: windows
        goarch: arm
      - goos: windows
        goarch: arm64

archives:
  - id: stable
    name_template: >-
      {{ .ProjectName }}_{{.Version}}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
    # darwin: Darwin
    # linux: Linux
    # windows: Windows
    # 386: i386
    # amd64: x86_64
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
  # files:
  #   - setup_scripts/*

checksum:
  name_template: 'checksums.txt'
snapshot:
  version_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'

release:
  # Repo in which the release will be created.
  # Default is extracted from the origin remote URL.
  # Note: it can only be one: either github or gitlab or gitea
  # github:
  #   owner: user
  #   name: repo

  # IDs of the archives to use.
  # Defaults to all.
  # ids:
  #   - foo
  #   - bar

  # If set to true, will not auto-publish the release.
  # Default is false.
  # draft: true

  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  # prerelease: auto

  # You can change the name of the GitHub release.
  # Default is `{{.Tag}}`
  name_template: "Kubectl Meshsync Snapshot {{.Tag}}"
